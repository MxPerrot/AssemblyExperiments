section .data
	prompt		db	"What's your age? ", 0
	prompt_len	equ	$ - prompt

	adult_msg	db	"You're an adult", 0xA
	adult_len	equ	$ - adult_msg

	young_msg	db	"You're too young", 0xA
	young_len	equ	$ - young_msg

section .bss
	input	resb	4	; 3 digits + new line

section .text
	global _start

_start:
	; Prompt
	mov eax, 4
	mov ebx, 1
	mov ecx, prompt
	mov edx, prompt_len
	int 0x80

	; Read input
	mov eax, 3
	mov ebx, 0
	mov ecx, input
	mov edx, 4
	int 0x80
	mov esi, eax

	; Convert input (str to int assuming numeric input, no error verification yet)
	xor eax, eax	; Clear EAX (result)
	xor ebx, ebx	; EBX = index

convert_loop:
	; Generated by ChatGPT 4o as i do not possess the technical knowledge yet
	mov dl, byte [input + ebx]
	cmp dl, 0xA		; newline?
	je check_age
	sub dl, '0'		; ASCII to digit
	imul eax, eax, 10	; multiply result by 10
	add eax, edx		; add digit
	inc ebx
	cmp ebx, esi
	jl convert_loop

check_age:
	cmp eax, 18
	jl too_young		; jump if age < 18

print_adult:
    mov eax, 4
    mov ebx, 1
    mov ecx, adult_msg
    mov edx, adult_len
    int 0x80
    jmp exit 		; don't print the young message, skip to the end

too_young:
    mov eax, 4
    mov ebx, 1
    mov ecx, young_msg
    mov edx, young_len
    int 0x80

exit:
    mov eax, 1
    xor ebx, ebx
    int 0x80
